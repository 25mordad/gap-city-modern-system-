<?php
/**
 * User.php
 *
 * This file is part of GCMS > MODULE MODEL
 * The file is part of the layer for interacting with database.
 * Linked table in DB: 
 *
 * @author AutoGenerated <25Mordad@gmail.com>
 * @version 2.0
 *
 */

require_once(__COREROOT__."/module/user/model/MetaUser.php");

class User
{

	public function __construct()
	{

	}

	public function insert($arr)
	{
		$query=$GLOBALS['GCMS_SAFESQL']
		->query(
				"INSERT INTO `gcms_user` (
				        `id` ,
				        `username` ,
				        `email` ,
				        `temp_code` ,
				        `password` ,
				        `password_salt` ,
				        `password_attempts_failed` ,
				        `status` ,
				        `user_level` ,
				        `added_id` ,
				        `date_created`
						) VALUES(
						NULL ,
						%n,
						%n,
						%n,
						%n,
						%n,
						%i,
						%n,
						%n,
						%i,
						%n
						)",
				array(
						$arr['username'],
						$arr['email'],
						$arr['temp_code'],
						$arr['password'],
						$arr['password_salt'],
						$arr['password_attempts_failed'],
						$arr['status'],
						$arr['user_level'],
						$arr['added_id'],
						$arr['date_created']
				));
		return $GLOBALS['GCMS_DB']->query($query);
	}

	public function update($arr)
	{
		$query=$GLOBALS['GCMS_SAFESQL']
		->query(
				"UPDATE `gcms_user` SET
						`id` =  %i
				        [ , `username` = %N ]
				        [ , `email` = %N ]
				        [ , `temp_code` = %N ]
				        [ , `password` = %N ]
				        [ , `password_salt` = %N ]
				        [ , `password_attempts_failed` = %I ]
				        [ , `status` = %N ]
				        [ , `user_level` = %N ]
				        [ , `added_id` = %I ]
				        [ , `date_created` = %N ]
						WHERE `id` =  %i",
				array(
						$arr['id'],
						$arr['username'],
						$arr['email'],
						$arr['temp_code'],
						$arr['password'],
						$arr['password_salt'],
						$arr['password_attempts_failed'],
						$arr['status'],
						$arr['user_level'],
						$arr['added_id'],
						$arr['date_created'],
						$arr['id']
				));
		return $GLOBALS['GCMS_DB']->query($query);
	}

	public function get($arr, $list = false, $order = "", $limit = "", $join_param = "")
	{
		$join_query_helper=array();
		if($join_param!=NULL)
		{
			$join_query_helper['select']=", `gcms_meta_user`.`value`, `gcms_meta_user`.`id` as meta_id";
			$join_query_helper['join']="INNER JOIN `gcms_meta_user` ON `gcms_user`.`id` = `gcms_meta_user`.`id_user`";
			$join_query_helper['where']="AND `gcms_meta_user`.`name` = ";
			$join_query_helper['param']=$join_param;
		}

		$query=$GLOBALS['GCMS_SAFESQL']
		->query(
				"SELECT `gcms_user`.* [ %S ] FROM `gcms_user` [ %S ]
						WHERE TRUE
						[ %S ][ %N ]
						[ AND `gcms_user`.`id` = %I ]
				        [ AND `gcms_user`.`username` = %N ]
				        [ AND `gcms_user`.`email` = %N ]
				        [ AND `gcms_user`.`temp_code` = %N ]
				        [ AND `gcms_user`.`password` = %N ]
				        [ AND `gcms_user`.`password_salt` = %N ]
				        [ AND `gcms_user`.`password_attempts_failed` = %I ]
				        [ AND `gcms_user`.`status` = %N ]
				        [ AND `gcms_user`.`status` != %N ]
				        [ AND `gcms_user`.`user_level` = %N ]
				        [ AND `gcms_user`.`added_id` = %I ]
						[ AND `gcms_user`.`date_created` = %N ]
						[ AND (`gcms_user`.`username` LIKE %N OR `gcms_user`.`email` LIKE %N )]
						[ ORDER BY `gcms_user`.`%S` ] [ %S ]
						[ LIMIT %I ][ , %I ]
						",
				array(
						$join_query_helper['select'],
						$join_query_helper['join'],
						$join_query_helper['where'],
						$join_query_helper['param'],
						$arr['id'],
						$arr['username'],
						$arr['email'],
						$arr['temp_code'],
						$arr['password'],
						$arr['password_salt'],
						$arr['password_attempts_failed'],
						$arr['status'],
						$arr['status_not'],
						$arr['user_level'],
						$arr['added_id'],
						$arr['date_created'],
						$arr['search'],
						$arr['search'],
						$order['by'],
						$order['sort'],
						$limit['start'],
						$limit['end']
				));
		if($list)
			return $GLOBALS['GCMS_DB']->get_results($query);
		else
			return $GLOBALS['GCMS_DB']->get_row($query);
	}

	public function get_count($arr, $join_param = "")
	{
		$join_query_helper=array();
		if($join_param!=NULL)
		{
			$join_query_helper['join']="INNER JOIN `gcms_meta_user` ON `gcms_user`.`id` = `gcms_meta_user`.`id_user`";
			$join_query_helper['where']="AND `gcms_meta_user`.`name` = ";
			$join_query_helper['param']=$join_param;
		}
		$query=$GLOBALS['GCMS_SAFESQL']
		->query(
				"SELECT COUNT(*) as Num FROM `gcms_user` [ %S ] WHERE TRUE
						[ %S ][ %N ]
						[ AND `id` = %I ]
				        [ AND `username` = %N ]
				        [ AND `email` = %N ]
				        [ AND `temp_code` = %N ]
				        [ AND `password` = %N ]
				        [ AND `password_salt` = %N ]
				        [ AND `password_attempts_failed` = %I ]
				        [ AND `status` = %N ]
				        [ AND `status` != %N ]
				        [ AND `user_level` = %N ]
				        [ AND `added_id` = %I ]
						[ AND `date_created` = %N ]
						[ AND (`username` LIKE %N OR `email` LIKE %N )]
						",
				array(
						$join_query_helper['join'],
						$join_query_helper['where'],
						$join_query_helper['param'],
						$arr['id'],
						$arr['username'],
						$arr['email'],
						$arr['temp_code'],
						$arr['password'],
						$arr['password_salt'],
						$arr['password_attempts_failed'],
						$arr['status'],
						$arr['status_not'],
						$arr['user_level'],
						$arr['added_id'],
						$arr['date_created'],
						$arr['search'],
						$arr['search']
				));
		$result=$GLOBALS['GCMS_DB']->get_results($query);
		return $result[0]->Num;
	}
}
